<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:d="http://xamarin.com/schemas/2014/forms/design"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:ext="clr-namespace:Xamarin.Forms;assembly=Xamarin.Forms.Extensions"
             xmlns:math="clr-namespace:Xamarin.Forms.MathDisplay;assembly=Xamarin.Forms.MathDisplay"
             xmlns:Calculator="clr-namespace:Calculator"
             xmlns:States="clr-namespace:Calculator.States"
             mc:Ignorable="d"
             x:Class="Calculator.MainPage"
             x:Name="self"
             BackgroundColor="{DynamicResource CanvasBackgroundColor}">
    <VisualStateManager.VisualStateGroups>
        <VisualStateGroup>
            <VisualState Name="{x:Static Calculator:MainPage.PORTRAIT_MODE}" />
            <VisualState Name="{x:Static Calculator:MainPage.LANDSCAPE_MODE}" />
        </VisualStateGroup>

        <VisualStateGroup Name="{x:Static Calculator:MainPage.PORTRAIT_MODE}">
            <VisualState Name="{x:Static Calculator:MainPage.BASIC_MODE}" />
        </VisualStateGroup>
    </VisualStateManager.VisualStateGroups>

    <ContentPage.Resources>
        <Calculator:CrunchCalculator x:Key="BasicCalculator" />

        <Style x:Name="MathLayoutStyle"
               TargetType="math:MathLayout"
               ApplyToDerivedTypes="True">
            <Setter Property="TextColor"
                    Value="{DynamicResource DetailColor}" />
        </Style>

        <Style TargetType="math:MathEntry">
            <Setter Property="SymbolTemplateSelector">
                <Calculator:CrunchTemplateSelector>
                    
                </Calculator:CrunchTemplateSelector>
            </Setter>
        </Style>
    </ContentPage.Resources>

    <AbsoluteLayout x:Name="Screen">
        <Calculator:KeyboardEntry BindingContext="{Binding BindingContext, Source={x:Reference CrunchKeyboard}}"
                                  AbsoluteLayout.LayoutBounds="-1000, -1000, -1, -1" />

        <AbsoluteLayout x:Name="CanvasArea"
                        AbsoluteLayout.LayoutBounds="0, 0, 1, 1"
                        AbsoluteLayout.LayoutFlags="SizeProportional">
            <ScrollView x:Name="CanvasScroll"
                        Orientation="Both"
                        AbsoluteLayout.LayoutBounds="0, 0, 1, 1"
                        AbsoluteLayout.LayoutFlags="SizeProportional"
                        ext:VisualElementAdditions.Visibility="{States:MainPage Default=1, Basic=0}">
                <Calculator:Canvas x:Name="Canvas">
                    <Calculator:Canvas.Resources>
                        <Style TargetType="Calculator:Equation"
                               ApplyToDerivedTypes="True"
                               BasedOn="{x:Reference MathLayoutStyle}">
                            <Style.Behaviors>
                                <Calculator:DragCalculationBehavior />
                            </Style.Behaviors>
                        </Style>

                        <Style TargetType="Calculator:Link"
                               ApplyToDerivedTypes="True">
                            <Style.Behaviors>
                                <Calculator:DragLinkBehavior />
                            </Style.Behaviors>
                        </Style>
                    </Calculator:Canvas.Resources>
                </Calculator:Canvas>
            </ScrollView>

            <Label x:Name="BasicAnswer"
                   VerticalOptions="End"
                   HorizontalTextAlignment="End"
                   VerticalTextAlignment="End"
                   HeightRequest="{States:MainPage Basic=100}"
                   Text="{Binding Path=Text, Source={StaticResource BasicCalculator}, FallbackValue=0}"
                   FontSize="{States:MainPage Portrait=33}"
                   ext:LabelExtensions.AutoSizeFont="{States:MainPage Basic=True}"
                   AbsoluteLayout.LayoutBounds="{States:MainPage Basic='1, 1, 1, 1'}"
                   AbsoluteLayout.LayoutFlags="All">
                <Label.Margin>
                    <States:MainPage Default="0">
                        <States:MainPage.Basic>
                            <Thickness Top="{x:Static Calculator:MainPage.SETTINGS_BUTTON_SIZE}" />
                        </States:MainPage.Basic>
                    </States:MainPage>
                </Label.Margin>

                <Label.Padding>
                    <States:MainPage Default="0">
                        <States:MainPage.Basic>
                            <Thickness Top="{x:Static Calculator:App.PAGE_PADDING}" />
                        </States:MainPage.Basic>
                    </States:MainPage>
                </Label.Padding>
            </Label>

            <Button x:Name="SettingsMenuButton"
                    Text="{OnPlatform Android=&#xf2f7;, iOS=&#xf43c;}"
                    FontSize="33"
                    FontFamily="{StaticResource IoniconsFont}"
                    AbsoluteLayout.LayoutBounds="0, 0, 50, 50"
                    AbsoluteLayout.LayoutFlags="PositionProportional" />

            <ContentView x:Name="AdSpace"
                         AbsoluteLayout.LayoutBounds="0.5, 0, -1, -1"
                         AbsoluteLayout.LayoutFlags="PositionProportional" />

            <Button x:Name="FunctionsMenuButton"
                    Text="f(x)"
                    FontSize="20"
                    AbsoluteLayout.LayoutBounds="1, 0, 50, 50"
                    AbsoluteLayout.LayoutFlags="PositionProportional"
                    ext:VisualElementAdditions.Visibility="{States:MainPage Default=1, Basic=0}" />

            <math:CursorView x:Name="PhantomCursor"
                             HeightRequest="{Binding Source={x:Static math:SoftKeyboard.Cursor}, Path=Height}"
                             Color="Red"
                             IsVisible="False" />
        </AbsoluteLayout>

        <BoxView x:Name="DrawerShadow"
                 x:FieldModifier="public"
                 InputTransparent="True"
                 AbsoluteLayout.LayoutBounds="0, 0, 1, 1"
                 AbsoluteLayout.LayoutFlags="SizeProportional" />

        <StackLayout x:Name="FullKeyboardView"
                     Orientation="Vertical">
            <Calculator:FunctionsDrawer x:Name="FunctionsDrawer"
                                        BackgroundColor="Transparent"
                                        HasShadow="False"
                                        IsClippedToBounds="True"
                                        CornerRadius="0"
                                        Padding="0"
                                        DropArea="{x:Reference Canvas}">
                <x:Arguments>
                    <ContentView x:Name="KeyboardView">
                        <ContentView.Resources>
                            <Style TargetType="Grid">
                                <Setter Property="RowSpacing"
                                        Value="{Binding Source={x:Reference CrunchKeyboard}, Path=RowSpacing}" />
                                <Setter Property="ColumnSpacing"
                                        Value="{Binding Source={x:Reference CrunchKeyboard}, Path=ColumnSpacing}" />
                            </Style>
                        </ContentView.Resources>

                        <Calculator:CrunchKeyboard x:Name="CrunchKeyboard">
                            <Calculator:CrunchKeyboard.BindingContext>
                                <States:MainPage Default="{Binding FocusedMathField.BindingContext, Source={x:Reference self}}"
                                                 Basic="{StaticResource BasicCalculator}" />
                            </Calculator:CrunchKeyboard.BindingContext>
                        </Calculator:CrunchKeyboard>
                    </ContentView>

                    <Calculator:AddFunction x:Name="AddFunctionLayout"
                                            IsVisible="False"
                                            CornerRadius="20"
                                            BackgroundColor="{DynamicResource PrimaryBackgroundColor}"
                                            HasShadow="False"
                                            Padding="0, 0, 0, 5" />
                </x:Arguments>
            </Calculator:FunctionsDrawer>
        </StackLayout>
    </AbsoluteLayout>
</ContentPage>